From 8510e0e9287d51eb13f9792559ef9da5c5c6e88b Mon Sep 17 00:00:00 2001
From: Vikash Bansal <bvikas@vmware.com>
Date: Mon, 5 Oct 2020 19:38:56 +0530
Subject: [PATCH] gdb: Stop inaccessible region from getting dumped

Background : 7.12 onward version of gdb started dumping some
inaccessible regions (e.g: alignment gaps) in coredump, which
is increasing the size of core file. Bug 2564068 was raised
for this issue.

Fix:
If a memory region in smaps file is having anonymous keyword
and "read, write and execute" flags are "not set"
Then that memory region is inaccessible, so should not be dumped.
---
 gdb/linux-tdep.c | 26 +++++++++++++++++---------
 1 file changed, 17 insertions(+), 9 deletions(-)

diff --git a/gdb/linux-tdep.c b/gdb/linux-tdep.c
index d06fbc1..d936a63 100644
--- a/gdb/linux-tdep.c
+++ b/gdb/linux-tdep.c
@@ -1537,15 +1537,23 @@ linux_find_memory_regions_full (struct gdbarch *gdbarch,
       int should_dump_p = 0;
 
       if (map.has_anonymous)
-	{
-	  should_dump_p
-	    = should_dump_mapping_p (filterflags, &map.vmflags,
-				     map.priv,
-				     map.mapping_anon_p,
-				     map.mapping_file_p,
-				     map.filename.c_str (),
-				     map.start_address,
-				     map.offset);
+      {
+          if (map.read == 0 && map.write == 0 && map.exec == 0)
+          {
+              /* This is an inaccessible region and should not be dumped */
+              should_dump_p = 0;
+          }
+          else
+          {
+              should_dump_p
+                  = should_dump_mapping_p (filterflags, &map.vmflags,
+                          map.priv,
+                          map.mapping_anon_p,
+                          map.mapping_file_p,
+                          map.filename.c_str (),
+                          map.start_address,
+                          map.offset);
+          }
 	}
       else
 	{
-- 
2.25.1

