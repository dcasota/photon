From 0b96a95df80ce87e09408ab37b701837346c9b43 Mon Sep 17 00:00:00 2001
From: Guruswamy Basavaiah <bguruswamy@vmware.com>
Date: Sat, 23 Sep 2023 13:54:49 +0530
Subject: [PATCH] PR29922, SHT_NOBITS section avoids section size sanity check

	PR 29922
	* dwarf2.c (find_debug_info): Ignore sections without
	SEC_HAS_CONTENTS.
(cherry picked from upstream binutils commit 8f2c64de86bc3d7556121fe296dd679000283931)
Code changes are done in hunk 1 for back porting
---
 bfd/dwarf2.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/bfd/dwarf2.c b/bfd/dwarf2.c
index 677f4881..b8c1ce6d 100644
--- a/bfd/dwarf2.c
+++ b/bfd/dwarf2.c
@@ -3837,19 +3837,22 @@ find_debug_info (bfd *abfd, const struct dwarf_debug_section *debug_sections,
     {
       look = debug_sections[debug_info].uncompressed_name;
       msec = bfd_get_section_by_name (abfd, look);
-      if (msec != NULL)
+      /* Testing SEC_HAS_CONTENTS is an anti-fuzzer measure.  Of
+	 course debug sections always have contents.  */
+      if (msec != NULL && (msec->flags & SEC_HAS_CONTENTS) != 0)
 	return msec;
 
       look = debug_sections[debug_info].compressed_name;
       if (look != NULL)
 	{
 	  msec = bfd_get_section_by_name (abfd, look);
-	  if (msec != NULL)
+	  if (msec != NULL && (msec->flags & SEC_HAS_CONTENTS) != 0)
 	    return msec;
 	}
 
       for (msec = abfd->sections; msec != NULL; msec = msec->next)
-	if (CONST_STRNEQ (msec->name, GNU_LINKONCE_INFO))
+	if ((msec->flags & SEC_HAS_CONTENTS) != 0
+	    && CONST_STRNEQ (msec->name, GNU_LINKONCE_INFO))
 	  return msec;
 
       return NULL;
@@ -3857,6 +3860,9 @@ find_debug_info (bfd *abfd, const struct dwarf_debug_section *debug_sections,
 
   for (msec = after_sec->next; msec != NULL; msec = msec->next)
     {
+      if ((msec->flags & SEC_HAS_CONTENTS) == 0)
+	continue;
+
       look = debug_sections[debug_info].uncompressed_name;
       if (strcmp (msec->name, look) == 0)
 	return msec;
-- 
2.25.1

