From 2f87c46b719e6edf0b6900e5eb307b7154e183e8 Mon Sep 17 00:00:00 2001
From: Zdenek Dohnal <zdohnal@redhat.com>
Date: Mon, 3 Jun 2024 18:53:58 +0200
Subject: [PATCH] Fix domain socket handling

- Check status of unlink and bind system calls.
- Don't allow extra domain sockets when running from launchd/systemd.
- Validate length of domain socket path (< sizeof(sun_path))

Fixes CVE-2024-35235, written by Mike Sweet

Signed-off-by: Zdenek Dohnal <zdohnal@redhat.com>
Signed-off-by: Ashwin Dayanand Kamat <ashwin.kamat@broadcom.com>
---
 cups/http-addr.c | 40 +++++++++++++++++++++-------------------
 scheduler/conf.c | 19 +++++++++++++++++++
 2 files changed, 40 insertions(+), 19 deletions(-)

diff --git a/cups/http-addr.c b/cups/http-addr.c
index 6aeeb80..2d65696 100644
--- a/cups/http-addr.c
+++ b/cups/http-addr.c
@@ -206,27 +206,29 @@ httpAddrListen(http_addr_t *addr,	/* I - Address to bind to */
     * Remove any existing domain socket file...
     */
 
-    unlink(addr->un.sun_path);
-
-   /*
-    * Save the current umask and set it to 0 so that all users can access
-    * the domain socket...
-    */
-
-    mask = umask(0);
-
-   /*
-    * Bind the domain socket...
-    */
-
-    status = bind(fd, (struct sockaddr *)addr, (socklen_t)httpAddrLength(addr));
+    if ((status = unlink(addr->un.sun_path)) < 0)
+    {
+      DEBUG_printf(("1httpAddrListen: Unable to unlink \"%s\": %s", addr->un.sun_path, strerror(errno)));
 
-   /*
-    * Restore the umask and fix permissions...
-    */
+      if (errno == ENOENT) 
+        status = 0;
+    }
 
-    umask(mask);
-    chmod(addr->un.sun_path, 0140777);
+    if (!status)
+    {
+       // Save the current umask and set it to 0 so that all users can access
+       // the domain socket...
+       mask = umask(0);
+
+       // Bind the domain socket...
+       if ((status = bind(fd, (struct sockaddr *)addr, (socklen_t)httpAddrLength(addr))) < 0)
+       {
+         DEBUG_printf(("1httpAddrListen: Unable to bind domain socket \"%s\": %s", addr->un.sun_path, strerror(errno)));
+       }
+
+       // Restore the umask...
+       umask(mask);
+    }
   }
   else
 #endif /* AF_LOCAL */
diff --git a/scheduler/conf.c b/scheduler/conf.c
index 4fa7eb1..0a1c189 100644
--- a/scheduler/conf.c
+++ b/scheduler/conf.c
@@ -3082,6 +3082,25 @@ read_cupsd_conf(cups_file_t *fp)	/* I - File to read from */
 
       cupsd_listener_t	*lis;		/* New listeners array */
 
+     /*
+      * If we are launched on-demand, do not use domain sockets from the config
+      * file.  Also check that the domain socket path is not too long.., 
+      */
+
+#ifdef HAVE_ONDEMAND
+    if (*value == '/' && OnDemand)
+    {
+     if (strcmp(value, CUPS_DEFAULT_DOMAINSOCKET))
+       cupsdLogMessage(CUPSD_LOG_INFO, "Ignoring %s address %s at line %d - only using domain socket from launchd/systemd.", line, value, linenum);
+       continue;
+    }
+#endif // HAVE_ONDEMAND
+
+    if (*value == '/' && strlen(value) > (sizeof(addr->addr.un.sun_path) - 1))
+    {
+     cupsdLogMessage(CUPSD_LOG_INFO, "Ignoring %s address %s at line %d - too long.", line, value, linenum);
+     continue; 
+    }
 
      /*
       * Get the address list...
-- 
2.39.0

