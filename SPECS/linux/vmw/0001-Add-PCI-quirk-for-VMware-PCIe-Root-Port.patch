From f17e47b6c621079a3b9e1b0eb70f4eacf31946b9 Mon Sep 17 00:00:00 2001
From: Todd Sabin <tsabin@vmware.com>
Date: Fri, 20 Dec 2024 07:36:49 -0600
Subject: [PATCH] Add PCI quirk for VMware PCIe Root Port

Add a PCI quirk entry for the VMware virtual PCIe Root Port,
which will allow multiple devices under the same virtual PCI
bridge to be put into separate IOMMU groups.

Signed-off-by: Todd Sabin <tsabin@vmware.com>
Signed-off-by: Srivatsa S. Bhat (VMware) <srivatsa@csail.mit.edu>
Signed-off-by: Roye Eshed <eshedr@vmware.com>
---
 drivers/pci/quirks.c | 15 +++++++++++++++
 1 file changed, 15 insertions(+)

diff --git a/drivers/pci/quirks.c b/drivers/pci/quirks.c
index 37cc08d70..f38e53e1f 100644
--- a/drivers/pci/quirks.c
+++ b/drivers/pci/quirks.c
@@ -4828,6 +4828,19 @@ static int pci_quirk_brcm_acs(struct pci_dev *dev, u16 acs_flags)
 		PCI_ACS_SV | PCI_ACS_RR | PCI_ACS_CR | PCI_ACS_UF);
 }
 
+static int pci_quirk_vmw_rp_acs(struct pci_dev *dev, u16 acs_flags)
+{
+	/*
+	 * VMware virtual PCIe Root Ports do not indicate ACS
+	 * capability, but the ESXi hypervisor prevents direct
+	 * peer-to-peer transactions between Root Ports.  Claim
+	 * SV/RR/CR/UF bits to allow separate IOMMU groups per Root
+	 * Port.
+	 */
+	return pci_acs_ctrl_enabled(acs_flags,
+		PCI_ACS_SV | PCI_ACS_RR | PCI_ACS_CR | PCI_ACS_UF);
+}
+
 /*
  * Wangxun 40G/25G/10G/1G NICs have no ACS capability, but on
  * multi-function devices, the hardware isolates the functions by
@@ -4998,6 +5011,8 @@ static const struct pci_dev_acs_enabled {
 	{ PCI_VENDOR_ID_NXP, 0x8d9b, pci_quirk_nxp_rp_acs },
 	/* Zhaoxin Root/Downstream Ports */
 	{ PCI_VENDOR_ID_ZHAOXIN, PCI_ANY_ID, pci_quirk_zhaoxin_pcie_ports_acs },
+	/* VMware PCIe Root Port */
+	{ PCI_VENDOR_ID_VMWARE, 0x07a0, pci_quirk_vmw_rp_acs },
 	/* Wangxun nics */
 	{ PCI_VENDOR_ID_WANGXUN, PCI_ANY_ID, pci_quirk_wangxun_nic_acs },
 	{ 0 }
-- 
2.47.1

