From 3ac0262457288ba92800f880b0b298d7af06672e Mon Sep 17 00:00:00 2001
From: Keerthana K <keerthana.kalyanasundaram@broadcom.com>
Date: Wed, 7 Aug 2024 14:54:23 +0000
Subject: [PATCH] rps_cpus: skip receive packets queuing to only housekeeping
 CPUs

Revert the logic of restricting receive packets queueing to only
housekeeping CPUs as HCX wants to set rps_cpus to isolated CPUs.

Signed-off-by: Keerthana K <keerthana.kalyanasundaram@broadcom.com>
---
 net/core/net-sysfs.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/net/core/net-sysfs.c b/net/core/net-sysfs.c
index 4ce57e75d139..2570f4f48b02 100644
--- a/net/core/net-sysfs.c
+++ b/net/core/net-sysfs.c
@@ -33,6 +33,7 @@ static const char fmt_dec[] = "%d\n";
 static const char fmt_uint[] = "%u\n";
 static const char fmt_ulong[] = "%lu\n";
 static const char fmt_u64[] = "%llu\n";
+extern int netdev_custom_steer;

 /* Caller holds RTNL or dev_base_lock */
 static inline int dev_isalive(const struct net_device *dev)
@@ -853,7 +854,7 @@ static ssize_t store_rps_map(struct netdev_rx_queue *queue,
 		return err;
 	}

-	if (!cpumask_empty(mask)) {
+	if (netdev_custom_steer == 0 && !cpumask_empty(mask)) {
 		cpumask_and(mask, mask, housekeeping_cpumask(HK_TYPE_DOMAIN));
 		cpumask_and(mask, mask, housekeeping_cpumask(HK_TYPE_WQ));
 		if (cpumask_empty(mask)) {
--
2.39.4

