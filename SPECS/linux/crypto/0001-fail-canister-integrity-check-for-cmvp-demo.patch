From cebe90ab076032f4e7226f6b74588f43be061a69 Mon Sep 17 00:00:00 2001
From: Srish Srinivasan <ssrish@vmware.com>
Date: Fri, 24 Nov 2023 20:57:23 +0000
Subject: [PATCH] fail canister integrity check when kernel commandline parameter tampertest=-1

---
 init/main.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/init/main.c b/init/main.c
index f181dae81..4c4a13060 100644
--- a/init/main.c
+++ b/init/main.c
@@ -20,6 +20,7 @@
 #include <linux/kernel.h>
 #include <linux/syscalls.h>
 #include <linux/stackprotector.h>
+#include <linux/fips.h>
 #include <linux/string.h>
 #include <linux/ctype.h>
 #include <linux/delay.h>
@@ -839,6 +840,8 @@ static void __init mm_init(void)
 }
 
 extern int fips_integrity_init(void);
+extern int tamper_testbuild;
+extern char canister_sections[];
 
 void __init __weak arch_call_rest_init(void)
 {
@@ -953,6 +956,13 @@ asmlinkage __visible void __init __no_sanitize_address start_kernel(void)
 	timekeeping_init();
 	time_init();
 
+	if (fips_enabled && tamper_testbuild == -1) {
+		unsigned long *p = kallsyms_lookup_name(canister_sections);
+		printk("Simulating broken Integrity test... corrupting canister section\n");
+		p+=2;
+		*p = 0;
+	}
+
 	fips_integrity_init();
 	/*
 	 * For best initial stack canary entropy, prepare it after:
-- 
2.35.6
