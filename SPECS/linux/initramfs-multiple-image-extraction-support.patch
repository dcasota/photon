rom 86b4d28714c430efd5b808e734243c68afff984e Mon Sep 17 00:00:00 2001
From: Him Kalyan Bordoloi <bordoloih@vmware.com>
Date: Tue, 22 Sep 2020 19:22:56 +0000
Subject: [PATCH] initramfs multiple image extraction support

Signed-off-by: Shivani Agarwal <shivani.agarwal@broadcom.com>
---
 init/initramfs.c | 39 ++++++++++++++++++++++++++++++++++-----
 1 file changed, 34 insertions(+), 5 deletions(-)

diff --git a/init/initramfs.c b/init/initramfs.c
index 547a1f001..667f8e61c 100644
--- a/init/initramfs.c
+++ b/init/initramfs.c
@@ -14,6 +14,17 @@
 
 static __initdata bool page_aligned_fmt = false;
 
+static int __initdata do_retain_initrd;
+
+static __initdata bool initrd_no_file_overwrite = false;
+
+static int __init initrd_no_file_overwrite_setup(char *__unused)
+{
+	initrd_no_file_overwrite = true;
+	return 1;
+}
+__setup("initrd_no_file_overwrite", initrd_no_file_overwrite_setup);
+
 /*
  * Add file pages directly to fd's page cache.
  */
@@ -281,15 +292,22 @@ static int __init do_collect(void)
 
 static int __init do_header(void)
 {
+	static bool newca_found = 0;
 	if (memcmp(collected, "070707", 6)==0) {
 		error("incorrect cpio method used: use -H newc option");
 		return 1;
 	}
 	if (memcmp(collected, "0707ca", 6)==0) {
-		if (!page_aligned_fmt)
+		if (!newca_found) {
 			printk(KERN_INFO "Page aligned format detected. Retain initrd.\n");
+			do_retain_initrd = 1;
+			newca_found = 1;
+		}
 		page_aligned_fmt = true;
 	}
+	else if (memcmp(collected, "070701", 6)==0) {
+		page_aligned_fmt = false;
+	}
 	else if (memcmp(collected, "070701", 6)) {
 		error("no cpio magic");
 		return 1;
@@ -362,6 +380,16 @@ static int __init maybe_link(void)
 	return 0;
 }
 
+static int __init is_overwrite(char *path)
+{
+	struct kstat st;
+
+	if (!vfs_lstat(path, &st) && S_ISREG(st.mode)) {
+		return 1;
+	}
+	return 0;
+}
+
 static __initdata struct file *wfile;
 static __initdata loff_t wfile_pos;
 
@@ -378,8 +406,11 @@ static int __init do_name(void)
 		int ml = maybe_link();
 		if (ml >= 0) {
 			int openflags = O_WRONLY|O_CREAT;
-			if (ml != 1)
+			if (ml != 1) {
+				if (initrd_no_file_overwrite && is_overwrite(collected))
+					panic("initramfs: file already exists %s", collected);
 				openflags |= O_TRUNC;
+			}
 			wfile = filp_open(collected, openflags, mode);
 			if (IS_ERR(wfile))
 				return 0;
@@ -555,8 +586,6 @@ static char * __init unpack_to_rootfs(char *buf, unsigned long len)
 	return message;
 }
 
-static int __initdata do_retain_initrd;
-
 static int __init retain_initrd_param(char *str)
 {
 	if (*str)
@@ -577,7 +606,7 @@ static void __init free_initrd(void)
 	unsigned long crashk_start = (unsigned long)__va(crashk_res.start);
 	unsigned long crashk_end   = (unsigned long)__va(crashk_res.end);
 #endif
-	if (do_retain_initrd || !initrd_start || page_aligned_fmt)
+	if (do_retain_initrd || !initrd_start)
 		goto skip;
 
 #ifdef CONFIG_KEXEC_CORE
-- 
2.35.6

