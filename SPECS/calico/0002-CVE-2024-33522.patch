From 7c0c4774d0015e775a385b346c1b6f06755183ca Mon Sep 17 00:00:00 2001
From: Pedro Coutinho <pedro@tigera.io>
Date: Thu, 15 Feb 2024 20:52:25 -0800
Subject: [PATCH] Verify calico cni binary contents instead of executing
 'calico -v'
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

'destinationUptoDate()' compares the files byte for byte,
so if they’re exactly the same, it’s equivalent to running
'calico -v'

[Brennan: Ported to 3.26.x]
---
 cni-plugin/Makefile               |  6 ++---
 cni-plugin/cmd/install/install.go |  2 +-
 cni-plugin/pkg/install/install.go | 39 +++++++++++++------------------
 3 files changed, 20 insertions(+), 27 deletions(-)

diff --git a/cni-plugin/Makefile b/cni-plugin/Makefile
index 92fbca6..49c7e95 100644
--- a/cni-plugin/Makefile
+++ b/cni-plugin/Makefile
@@ -103,6 +103,9 @@ else
 	$(call build_binary, $(PACKAGE_NAME)/cmd/calico, $@)
 endif

+$(BIN)/calico-ipam: $(BIN)/calico
+	cp "$<" "$@"
+
 ## Build the Calico network plugin and ipam plugins for Windows
 $(BIN_WIN)/calico.exe $(BIN_WIN)/calico-ipam.exe: $(SRC_FILES)
 	$(DOCKER_RUN) \
@@ -159,9 +162,6 @@ check-boring-ssl: $(BIN)/install
 	$(DOCKER_RUN) -e CGO_ENABLED=$(CGO_ENABLED) $(CALICO_BUILD) $(CHECK_BORINGSSL)
 	-rm -f $(BIN)/tags.txt

-$(BIN)/calico-ipam $(BIN)/calico: $(BIN)/install
-	cp "$<" "$@"
-
 ut-datastore:
 	# The tests need to run as root
 	docker run --rm -t --privileged --net=host \
diff --git a/cni-plugin/cmd/install/install.go b/cni-plugin/cmd/install/install.go
index 1ac30ed..e3d11a4 100644
--- a/cni-plugin/cmd/install/install.go
+++ b/cni-plugin/cmd/install/install.go
@@ -24,7 +24,7 @@ import (
 var VERSION string

 func main() {
-	err := install.Install()
+	err := install.Install(VERSION)
 	if err != nil {
 		logrus.WithError(err).Fatal("Error installing CNI plugin")
 	}
diff --git a/cni-plugin/pkg/install/install.go b/cni-plugin/pkg/install/install.go
index 8d4dc01..e9daa16 100644
--- a/cni-plugin/pkg/install/install.go
+++ b/cni-plugin/pkg/install/install.go
@@ -15,13 +15,12 @@
 package install

 import (
-	"bytes"
 	"encoding/base64"
 	"encoding/json"
 	"fmt"
 	"io"
 	"os"
-	"os/exec"
+	"runtime"
 	"strings"
 	"time"

@@ -118,7 +117,7 @@ func loadConfig() config {
 	return c
 }

-func Install() error {
+func Install(version string) error {
 	// Make sure the RNG is seeded.
 	seedrng.EnsureSeeded()

@@ -189,9 +188,6 @@ func Install() error {
 			continue
 		}

-		// Don't exec the 'calico' binary later on if it has been skipped
-		calicoBinarySkipped := true
-
 		// Iterate through each binary we might want to install.
 		files, err := os.ReadDir("/opt/cni/bin/")
 		if err != nil {
@@ -215,9 +211,6 @@ func Install() error {
 				logrus.WithError(err).Errorf("Failed to install %s", target)
 				os.Exit(1)
 			}
-			if binary.Name() == "calico" || binary.Name() == "calico.exe" {
-				calicoBinarySkipped = false
-			}
 			logrus.Infof("Installed %s", target)
 		}

@@ -225,21 +218,21 @@ func Install() error {
 		logrus.Infof("Wrote Calico CNI binaries to %s\n", d)
 		binsWritten = true

-		// Don't exec the 'calico' binary later on if it has been skipped
-		if !calicoBinarySkipped {
-			// Print CNI plugin version to confirm that the binary was actually written.
-			// If this fails, it means something has gone wrong so we should retry.
-			cmd := exec.Command(d+"/calico", "-v")
-			var out bytes.Buffer
-			cmd.Stdout = &out
-			err = cmd.Run()
-			if err != nil {
-				logrus.WithError(err).Warnf("Failed getting CNI plugin version from installed binary, exiting")
-				return err
-			}
-			logrus.Infof("CNI plugin version: %s", out.String())
+		// Instead of executing 'calico -v', check if the calico binary was copied successfully
+		calicoBinaryName := "calico"
+		if runtime.GOOS == "windows" {
+			calicoBinaryName = "calico.exe"
 		}
-	}
+		calicoBinaryOK, err := destinationUptoDate("/opt/cni/bin/"+calicoBinaryName, d+"/"+calicoBinaryName)
+		if err != nil {
+			logrus.WithError(err).Warnf("Failed verifying installed binary, exiting")
+			return err
+		}
+		// Print version number if successful
+		if calicoBinaryOK {
+			logrus.Infof("CNI plugin version: %s", version)
+		}
+    }

 	// If binaries were not placed, exit
 	if !binsWritten {
--
2.39.0

