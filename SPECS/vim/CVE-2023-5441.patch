From 20d161ace307e28690229b68584f2d84556f8960 Mon Sep 17 00:00:00 2001
From: Christian Brabandt <cb@256bit.org>
Date: Thu, 5 Oct 2023 22:08:30 +0200
Subject: [PATCH] patch 9.0.1992: [security] segfault in exmode

Problem:  segfault in exmode when redrawing
Solution: skip gui_scroll when exmode_active

Signed-off-by: Christian Brabandt <cb@256bit.org>

[ssrish: resolved a hunk failure]
Signed-off-by: Srish Srinivasan <ssrish@vmware.com>
---
 src/gui.c                         | 4 ++++
 src/testdir/crash/crash_scrollbar | 2 ++
 src/testdir/test_crash.vim        | 7 +++++++
 src/version.c                     | 2 ++
 4 files changed, 15 insertions(+)
 create mode 100644 src/testdir/crash/crash_scrollbar

diff --git a/src/gui.c b/src/gui.c
index 4408545..a2f9c9d 100644
--- a/src/gui.c
+++ b/src/gui.c
@@ -4436,6 +4436,7 @@ gui_do_scrollbar(
  * Scroll a window according to the values set in the globals current_scrollbar
  * and scrollbar_value.  Return TRUE if the cursor in the current window moved
  * or FALSE otherwise.
+ * may eventually cause a redraw using updateWindow
  */
     int
 gui_do_scroll(void)
@@ -4455,6 +4456,9 @@ gui_do_scroll(void)
     if (wp == NULL)
 	// Couldn't find window
 	return FALSE;
+    // don't redraw, LineOffset and similar are not valid!
+    if (exmode_active)
+	return FALSE;
 
     /*
      * Compute number of lines to scroll.  If zero, nothing to do.
diff --git a/src/testdir/crash/crash_scrollbar b/src/testdir/crash/crash_scrollbar
new file mode 100644
index 0000000..dcaa538
--- /dev/null
+++ b/src/testdir/crash/crash_scrollbar
@@ -0,0 +1,2 @@
+" this goes to insert mode and presses key k_VerScrollbar which may cause a redraw in exmode, which used ot crash Vim
+norm o€ùX
diff --git a/src/testdir/test_crash.vim b/src/testdir/test_crash.vim
index c1cd588..21d30b4 100644
--- a/src/testdir/test_crash.vim
+++ b/src/testdir/test_crash.vim
@@ -63,6 +63,12 @@ func Test_crash1()
     \ '  || echo "crash 8: [OK]" >> X_crash1_result.txt' .. "\<cr>")
   call TermWait(buf, 3000)
 
+  let file = 'crash/crash_scrollbar'
+  let args = printf(cmn_args, vim, file)
+  call term_sendkeys(buf, args ..
+    \ '  && echo "crash 9: [OK]" >> X_crash1_result.txt' .. "\<cr>")
+  call TermWait(buf, 1000)
+
   " clean up
   exe buf .. "bw!"
 
@@ -75,6 +81,7 @@ func Test_crash1()
       \ 'crash 4: [OK]',
       \ 'crash 5: [OK]',
       \ 'crash 8: [OK]',
+      \ 'crash 9: [OK]',
       \ ]
 
   call assert_equal(expected, getline(1, '$'))
diff --git a/src/version.c b/src/version.c
index 1a60fda..5a71cec 100644
--- a/src/version.c
+++ b/src/version.c
@@ -735,6 +735,8 @@ static char *(features[]) =
 
 static int included_patches[] =
 {   /* Add new patch number below this line */
+/**/
+    1992,
 /**/
     1969,
 /**/
-- 
2.35.6

