From ced2c7394aafdc90fb7845e09b3a3fee23d48cb1 Mon Sep 17 00:00:00 2001
From: Christian Brabandt <cb@256bit.org>
Date: Sat, 2 Sep 2023 21:15:52 +0200
Subject: [PATCH] patch 9.0.1848: [security] buffer-overflow in
 vim_regsub_both()

Problem:  buffer-overflow in vim_regsub_both()
Solution: Check remaining space

Signed-off-by: Christian Brabandt <cb@256bit.org>
[msikka: this patch is backported from 9.0.1848, function Test_crash1 and testdir/crash directory is missing in 8.2.5169]
Signed-off-by: Mukul Sikka <msikka@vmware.com>
---
 src/ex_cmds.c                     |  3 +++
 src/regexp.c                      |  3 ++-
 2 files changed, 5 insertions(+), 1 deletions(-)
 create mode 100644 src/testdir/crash/vim_regsub_both

diff --color -Naur a/src/ex_cmds.c b/src/ex_cmds.c
--- a/src/ex_cmds.c	2022-06-28 00:45:10
+++ b/src/ex_cmds.c	2023-09-06 13:46:33
@@ -4527,6 +4527,9 @@
 		mch_memmove(new_end, sub_firstline + copycol, (size_t)copy_len);
 		new_end += copy_len;
 
+		if (new_start_len - copy_len < sublen)
+		    sublen = new_start_len - copy_len - 1;
+
 #ifdef FEAT_EVAL
 		++textlock;
 #endif
diff --color -Naur a/src/regexp.c b/src/regexp.c
--- a/src/regexp.c	2022-06-28 00:45:10
+++ b/src/regexp.c	2023-09-06 13:54:08
@@ -1995,7 +1995,8 @@
 	// "flags & REGSUB_COPY" != 0.
 	if (copy)
 	{
-	    if (eval_result[nested] != NULL)
+	    if (eval_result[nested] != NULL &&
+		    STRLEN(eval_result[nested]) < destlen)
 	    {
 		STRCPY(dest, eval_result[nested]);
 		dst += STRLEN(eval_result[nested]);

