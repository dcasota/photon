From db510ca8052884fd260f425025bacf44f6c92fa9 Mon Sep 17 00:00:00 2001
From: Christian Brabandt <cb@256bit.org>
Date: Sun, 3 Sep 2023 09:23:12 +0200
Subject: [PATCH] patch 9.0.1854: test_crash1() fails on CI

Problem:  test_crash1() fails on CI
Solution: don't run Screendump test, verify that it doesn't crash
          by running it through a shell command line, testing
          the exit value and concatenating success cmd using '&&'

Signed-off-by: Christian Brabandt <cb@256bit.org>
[ssrish: resolved a hunk failure]
Signed-off-by: Srish Srinivasan <ssrish@vmware.com>
---
 src/testdir/test_crash.vim | 40 ++++++++++++++++++++++++++++----------
 src/version.c              |  2 ++
 2 files changed, 32 insertions(+), 10 deletions(-)

diff --git a/src/testdir/test_crash.vim b/src/testdir/test_crash.vim
index 445fe8d..eb3c0a3 100644
--- a/src/testdir/test_crash.vim
+++ b/src/testdir/test_crash.vim
@@ -6,20 +6,40 @@ CheckScreendump

 func Test_crash1()
   " The following used to crash Vim
-  let opts = #{wait_for_ruler: 0, rows: 20}
-  let args = ' -u NONE -i NONE -n -e -s -S '
-  let buf = RunVimInTerminal(args .. ' crash/poc_huaf1', opts)
-  call VerifyScreenDump(buf, 'Test_crash_01', {})
-  exe buf .. "bw!"
+  " let opts = #{wait_for_ruler: 0, rows: 20, cmd: 'sh'}
+  let opts = #{cmd: 'sh'}
+  let args = 'bash'
+  let vim  = GetVimProg()

-  let buf = RunVimInTerminal(args .. ' crash/poc_huaf2', opts)
-  call VerifyScreenDump(buf, 'Test_crash_01', {})
-  exe buf .. "bw!"
+  let buf = RunVimInTerminal(args, opts)

-  let buf = RunVimInTerminal(args .. ' crash/poc_huaf3', opts)
-  call VerifyScreenDump(buf, 'Test_crash_01', {})
+  let file = 'crash/poc_huaf1'
+  let cmn_args = "%s -u NONE -i NONE -n -e -s -S %s -c ':qa!'"
+  let args = printf(cmn_args, vim, file)
+  call term_sendkeys(buf, args ..
+    \ '  && echo "crash 1: [OK]" >> X_crash1_result.txt' .. "\<cr>")
+
+  let file = 'crash/poc_huaf2'
+  let args = printf(cmn_args, vim, file)
+  call term_sendkeys(buf, args ..
+    \ '  && echo "crash 2: [OK]" >> X_crash1_result.txt' .. "\<cr>")
+
+  let file = 'crash/poc_huaf3'
+  let args = printf(cmn_args, vim, file)
+  call term_sendkeys(buf, args ..
+    \ '  && echo "crash 3: [OK]" >> X_crash1_result.txt' .. "\<cr>")
+
+  call TermWait(buf, 50)
+
+  " clean up
   exe buf .. "bw!"

+  sp X_crash1_result.txt
+  call assert_equal(['crash 1: [OK]', 'crash 2: [OK]', 'crash 3: [OK]'],
+    \ getline(1, '$'))
+  bw!
+
+  call delete('X_crash1_result.txt')
 endfunc

 func Test_crash2()
diff --git a/src/version.c b/src/version.c
index 2969083..12dadde 100644
--- a/src/version.c
+++ b/src/version.c
@@ -735,6 +735,8 @@ static char *(features[]) =

 static int included_patches[] =
 {   /* Add new patch number below this line */
+/**/
+    1854,
 /**/
     1848,
 /**/
--
2.35.6
