Description: Backport a couple of functions needed to fix the gvariant
 CVE-2023-24593 et al. issues: g_assert_cmpvariant and g_variant_get_depth
Author: Santiago Ruano Rinc√≥n <santiago@freexian.com>

Index: glib/glib/gtestutils.h
===================================================================
--- glib.orig/glib/gtestutils.h
+++ glib/glib/gtestutils.h
@@ -87,6 +87,23 @@ typedef void (*GTestFixtureFunc) (gpoint
                                                g_assertion_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, \
                                                                     "assertion failed (" #m1 " == " #m2 ")"); \
                                         } G_STMT_END
+#define g_assert_cmpvariant(v1, v2) \
+  G_STMT_START \
+  { \
+    GVariant *__v1 = (v1), *__v2 = (v2); \
+    if (!g_variant_equal (__v1, __v2)) \
+      { \
+        gchar *__s1, *__s2, *__msg; \
+        __s1 = g_variant_print (__v1, TRUE); \
+        __s2 = g_variant_print (__v2, TRUE); \
+        __msg = g_strdup_printf ("assertion failed (" #v1 " == " #v2 "): %s does not equal %s", __s1, __s2); \
+        g_assertion_message (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, __msg); \
+        g_free (__s1); \
+        g_free (__s2); \
+        g_free (__msg); \
+      } \
+  } \
+  G_STMT_END
 #define g_assert_no_error(err)          G_STMT_START { \
                                              if (err) \
                                                g_assertion_message_error (G_LOG_DOMAIN, __FILE__, __LINE__, G_STRFUNC, \
Index: glib/glib/gvariant-core.c
===================================================================
--- glib.orig/glib/gvariant-core.c
+++ glib/glib/gvariant-core.c
@@ -617,6 +617,21 @@ g_variant_is_trusted (GVariant *value)
   return (value->state & STATE_TRUSTED) != 0;
 }
 
+/* < internal >
+ * g_variant_get_depth:
+ * @value: a #GVariant
+ *
+ * Gets the nesting depth of a #GVariant. This is 0 for a #GVariant with no
+ * children.
+ *
+ * Returns: nesting depth of @value
+ */
+gsize
+g_variant_get_depth (GVariant *value)
+{
+  return value->depth;
+}
+
 /* -- public -- */
 
 /**
Index: glib/glib/gvariant-core.h
===================================================================
--- glib.orig/glib/gvariant-core.h
+++ glib/glib/gvariant-core.h
@@ -34,4 +34,6 @@ gboolean                g_variant_is_tru
 
 GVariantTypeInfo *      g_variant_get_type_info                         (GVariant            *value);
 
+gsize                   g_variant_get_depth                             (GVariant            *value);
+
 #endif /* __G_VARIANT_CORE_H__ */
