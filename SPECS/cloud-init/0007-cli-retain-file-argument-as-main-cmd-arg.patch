From 9b9a188695f6ea07141b72d2136ec2a7080cac5c Mon Sep 17 00:00:00 2001
From: Shreenidhi Shedi <shreenidhi.shedi@broadcom.com>
Date: Mon, 15 Jul 2024 12:45:00 +0530
Subject: [PATCH 7/8] cli-retain-file-argument-as-main-cmd-arg

Description: Retain support for cloud-init -f FILE argument on the commandline

Upstream has disallowed the use of -f/--file argument as a generic
argument on the command line before the positional cloud-init subcommand is
provided.
Retain the ability to provide -f/--file on the commandline before the
subcommand init, modules or single.
Author: Chad Smith <chad.smith@canonical.com>
Origin: backport
Bug: https://bugs.launchpad.net/ubuntu/+source/cloud-init/+bug/2064300

Refer: https://github.com/canonical/cloud-init/issues/5302
Signed-off-by: Shreenidhi Shedi <shreenidhi.shedi@broadcom.com>
---
 cloudinit/cmd/main.py            | 16 ++++++++++++++++
 tests/unittests/cmd/test_main.py |  6 +++++-
 2 files changed, 21 insertions(+), 1 deletion(-)

diff --git a/cloudinit/cmd/main.py b/cloudinit/cmd/main.py
index 4a1c8b2..eff87b4 100644
--- a/cloudinit/cmd/main.py
+++ b/cloudinit/cmd/main.py
@@ -121,6 +121,11 @@ def extract_fns(args):
     # since it would of broke if it couldn't have
     # read that file already...
     fn_cfgs = []
+    if args.main_files:
+        # Append common --file argument to beginning of list when present.
+        # Avoid namespace collision with same --file arg defined in subcommands
+        for fh in args.main_files:
+            fn_cfgs.append(os.path.realpath(fh.name))
     if args.files:
         for fh in args.files:
             # The realpath is more useful in logging
@@ -921,6 +926,17 @@ def main(sysv_args=None):
         help="Show additional pre-action logging (default: %(default)s).",
         default=False,
     )
+    parser.add_argument(
+        "--file",
+        "-f",
+        action="append",
+        dest="main_files",
+        help=(
+            "Use additional yaml configuration files for subcommands: init,"
+            " modules or single"
+        ),
+        type=argparse.FileType("rb"),
+    )
     parser.add_argument(
         "--force",
         action="store_true",
diff --git a/tests/unittests/cmd/test_main.py b/tests/unittests/cmd/test_main.py
index f9b3faa..25bec35 100644
--- a/tests/unittests/cmd/test_main.py
+++ b/tests/unittests/cmd/test_main.py
@@ -13,7 +13,9 @@ from cloudinit.cmd import main
 from cloudinit.util import ensure_dir, load_text_file, write_file
 from tests.unittests.helpers import FilesystemMockingTestCase, wrap_and_call
 
-MyArgs = namedtuple("MyArgs", "debug files force local reporter subcommand")
+MyArgs = namedtuple(
+    "MyArgs", "debug main_files files force local reporter subcommand"
+)
 
 
 class TestMain(FilesystemMockingTestCase):
@@ -71,6 +73,7 @@ class TestMain(FilesystemMockingTestCase):
         """Modules like write_files are run in 'net' mode."""
         cmdargs = MyArgs(
             debug=False,
+            main_files=None,
             files=None,
             force=False,
             local=False,
@@ -117,6 +120,7 @@ class TestMain(FilesystemMockingTestCase):
         write_file(self.cloud_cfg_file, cloud_cfg)
         cmdargs = MyArgs(
             debug=False,
+            main_files=None,
             files=None,
             force=False,
             local=False,
-- 
2.34.1

