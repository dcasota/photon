From 02f8f64c38eb474f87dede325abecc882cbe280b Fri 03 Jul 2020 15:19:57 +0000
From: Jan de Mooij <jdemooij@mozilla.com>
Date: Fri, 03 Jul 2020 15:19:57 +0000
Subject: Bug 1647293 - Don't improve TypeSets containing the magic-args type. r=iain, a=RyanVM

[msikka: backported changes to 60.9.0 one AbortReasonOr<Ok> IonBuilder function not present]
Signed-off-by: Mukul Sikka <msikka@vmware.com>
---

diff --color -Naur a/js/src/jit/IonBuilder.cpp b/js/src/jit/IonBuilder.cpp
--- a/js/src/jit/IonBuilder.cpp	2019-09-01 18:39:18
+++ b/js/src/jit/IonBuilder.cpp	2023-08-28 15:32:59
@@ -2386,6 +2386,7 @@
                                              TemporaryTypeSet* type,
                                              MTest* test) {
   if (type->unknown()) return Ok();
+  MOZ_ASSERT(!type->hasType(TypeSet::MagicArgType()));
 
   // Don't emit MFilterTypeSet if it doesn't improve the typeset.
   if (subject->resultTypeSet()) {
@@ -2556,7 +2557,7 @@
                 alloc_->lifoAlloc());
   }
 
-  if (inputTypes->unknown()) return Ok();
+  if (inputTypes->unknown() || inputTypes->hasType(TypeSet::MagicArgType())) return Ok();
 
   // Note: we cannot remove the AnyObject type in the false branch,
   // since there are multiple ways to get an object. That is the reason
@@ -2635,7 +2636,7 @@
                 alloc_->lifoAlloc());
   }
 
-  if (inputTypes->unknown()) return Ok();
+  if (inputTypes->unknown() || inputTypes->hasType(TypeSet::MagicArgType())) return Ok();
 
   TemporaryTypeSet* type;
 
@@ -2696,7 +2697,7 @@
             alloc_->lifoAlloc());
       }
 
-      if (oldType->unknown()) return Ok();
+      if (oldType->unknown() || oldType->hasType(TypeSet::MagicArgType())) return Ok();
 
       TemporaryTypeSet* type = nullptr;
       if (trueBranch)
@@ -2770,7 +2771,7 @@
   }
 
   // If ins does not have a typeset we return as we cannot optimize.
-  if (oldType->unknown()) return Ok();
+  if (oldType->unknown() || oldType->hasType(TypeSet::MagicArgType())) return Ok();
 
   // Decide either to set or remove.
   if (trueBranch) {
