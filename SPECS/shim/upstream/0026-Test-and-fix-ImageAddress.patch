From 569270d8603d68308ad8bf8ef4cad4b09101d35e Mon Sep 17 00:00:00 2001
From: Peter Jones <pjones@redhat.com>
Date: Fri, 28 Apr 2023 11:55:10 -0400
Subject: [PATCH 26/35] Test (and fix) ImageAddress()

This adds a test case for our address sanitation checking function
ImageAddresS().  In doing so it addresses two issues:

- previously we allowed the address after the last byte of the image to
  be computed (may need to revert this or fix some callers, we'll see...)
- bespoke overflow checking and using + directly instead of using
  __builtin_add_overflow()

Signed-off-by: Peter Jones <pjones@redhat.com>
[AM: keep only _fix_ part]
Signed-off-by: Alexey Makhalov <amakhalov@vmware.com>
---
 pe-relocate.c                    |   9 ++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/pe-relocate.c b/pe-relocate.c
index ee5a615..6401114 100644
--- a/pe-relocate.c
+++ b/pe-relocate.c
@@ -12,16 +12,19 @@
 void *
 ImageAddress (void *image, uint64_t size, uint64_t address)
 {
+	uintptr_t img_addr;
+
 	/* ensure our local pointer isn't bigger than our size */
-	if (address > size)
+	if (address >= size)
 		return NULL;
 
 	/* Insure our math won't overflow */
-	if (UINT64_MAX - address < (uint64_t)(intptr_t)image)
+	img_addr = (uintptr_t)image;
+	if (__builtin_add_overflow(img_addr, address, &img_addr))
 		return NULL;
 
 	/* return the absolute pointer */
-	return image + address;
+	return (void *)img_addr;
 }
 
 /*
-- 
2.39.0

