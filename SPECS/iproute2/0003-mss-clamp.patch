From f9b373e3028dc1cbeeb5536e32936a949fbb1ce7 Mon Sep 17 00:00:00 2001
From: Shreenidhi Shedi <sshedi@vmware.com>
Date: Fri, 24 Jun 2022 19:51:05 +0530
Subject: [PATCH 3/4] mss-clamp

Signed-off-by: Shreenidhi Shedi <sshedi@vmware.com>
---
 include/uapi/linux/if_tunnel.h |  1 +
 ip/link_gre.c                  | 75 ++++++++++++++++++++++++----------
 2 files changed, 54 insertions(+), 22 deletions(-)

diff --git a/include/uapi/linux/if_tunnel.h b/include/uapi/linux/if_tunnel.h
index edaea41..f3b3b25 100644
--- a/include/uapi/linux/if_tunnel.h
+++ b/include/uapi/linux/if_tunnel.h
@@ -140,6 +140,7 @@ enum {
 	IFLA_GRE_ERSPAN_VER,
 	IFLA_GRE_ERSPAN_DIR,
 	IFLA_GRE_ERSPAN_HWID,
+	IFLA_GRE_MSS_CLAMP,
 	__IFLA_GRE_MAX,
 };
 
diff --git a/ip/link_gre.c b/ip/link_gre.c
index f462a22..b4d09c3 100644
--- a/ip/link_gre.c
+++ b/ip/link_gre.c
@@ -22,6 +22,9 @@
 #include "utils.h"
 #include "ip_common.h"
 #include "tunnel.h"
+#include "hcx_helpers.h"
+
+#define MSGBUFSZ 2048
 
 static bool gre_is_erspan(struct link_util *lu)
 {
@@ -52,12 +55,17 @@ static void gre_print_help(struct link_util *lu, int argc, char **argv, FILE *f)
 		"			[ [no]encap-csum ]\n"
 		"			[ [no]encap-csum6 ]\n"
 		"			[ [no]encap-remcsum ]\n", lu->id);
-	if (is_erspan)
+
+	if (is_erspan) {
 		fprintf(f,
 			"			[ erspan_ver version ]\n"
 			"			[ erspan IDX ]\n"
 			"			[ erspan_dir { ingress | egress } ]\n"
 			"			[ erspan_hwid hwid ]\n");
+		if (get_mss_clamp())
+			fprintf(f, "           [ mss-clamp ]\n");
+	}
+
 	fprintf(f,
 		"\n"
 		"Where:	ADDR := { IP_ADDRESS | any }\n"
@@ -74,6 +82,7 @@ static int gre_parse_opt(struct link_util *lu, int argc, char **argv,
 	struct {
 		struct nlmsghdr n;
 		struct ifinfomsg i;
+		char buf[MSGBUFSZ];
 	} req = {
 		.n.nlmsg_len = NLMSG_LENGTH(sizeof(*ifi)),
 		.n.nlmsg_flags = NLM_F_REQUEST,
@@ -107,6 +116,7 @@ static int gre_parse_opt(struct link_util *lu, int argc, char **argv,
 	__u8 erspan_ver = 1;
 	__u8 erspan_dir = 0;
 	__u16 erspan_hwid = 0;
+	__u16 mss_clamp = 0;
 
 	inet_prefix_reset(&saddr);
 	inet_prefix_reset(&daddr);
@@ -206,6 +216,9 @@ get_failed:
 		if (greinfo[IFLA_GRE_ERSPAN_HWID])
 			erspan_hwid = rta_getattr_u16(greinfo[IFLA_GRE_ERSPAN_HWID]);
 
+		if (get_mss_clamp() && greinfo[IFLA_GRE_MSS_CLAMP])
+			mss_clamp = rta_getattr_u16(greinfo[IFLA_GRE_MSS_CLAMP]);
+
 		free(answer);
 	}
 
@@ -368,6 +381,13 @@ get_failed:
 			NEXT_ARG();
 			if (get_u16(&erspan_hwid, *argv, 0))
 				invarg("invalid erspan hwid\n", *argv);
+		} else if (get_mss_clamp() && strcmp(*argv, "mss-clamp") == 0) {
+			NEXT_ARG();
+			if (get_u16(&mss_clamp, *argv, 0))
+				invarg("Invalid mss-clamp.", *argv);
+			/* some arbitrary lower bound */
+			if ((mss_clamp > 0) &&  (mss_clamp < 500))
+				invarg("Invalid mss-clamp.", *argv);
 		} else {
 			gre_print_help(lu, argc, argv, stderr);
 			return -1;
@@ -391,40 +411,46 @@ get_failed:
 		}
 	}
 
+	int maxlen = 1024;
+	if (get_mss_clamp())
+		maxlen = MSGBUFSZ;
+
 	if (metadata) {
-		addattr_l(n, 1024, IFLA_GRE_COLLECT_METADATA, NULL, 0);
+		addattr_l(n, maxlen, IFLA_GRE_COLLECT_METADATA, NULL, 0);
 		return 0;
 	}
 
-	addattr32(n, 1024, IFLA_GRE_IKEY, ikey);
-	addattr32(n, 1024, IFLA_GRE_OKEY, okey);
-	addattr_l(n, 1024, IFLA_GRE_IFLAGS, &iflags, 2);
-	addattr_l(n, 1024, IFLA_GRE_OFLAGS, &oflags, 2);
+	addattr32(n, maxlen, IFLA_GRE_IKEY, ikey);
+	addattr32(n, maxlen, IFLA_GRE_OKEY, okey);
+	addattr_l(n, maxlen, IFLA_GRE_IFLAGS, &iflags, 2);
+	addattr_l(n, maxlen, IFLA_GRE_OFLAGS, &oflags, 2);
+
 	if (is_addrtype_inet_not_unspec(&saddr))
-		addattr_l(n, 1024, IFLA_GRE_LOCAL, saddr.data, saddr.bytelen);
+		addattr_l(n, maxlen, IFLA_GRE_LOCAL, saddr.data, saddr.bytelen);
 	if (is_addrtype_inet_not_unspec(&daddr))
-		addattr_l(n, 1024, IFLA_GRE_REMOTE, daddr.data, daddr.bytelen);
-	addattr_l(n, 1024, IFLA_GRE_PMTUDISC, &pmtudisc, 1);
+		addattr_l(n, maxlen, IFLA_GRE_REMOTE, daddr.data, daddr.bytelen);
+	addattr_l(n, maxlen, IFLA_GRE_PMTUDISC, &pmtudisc, 1);
 	if (ignore_df)
-		addattr8(n, 1024, IFLA_GRE_IGNORE_DF, ignore_df & 1);
-	addattr_l(n, 1024, IFLA_GRE_TOS, &tos, 1);
+		addattr8(n, maxlen, IFLA_GRE_IGNORE_DF, ignore_df & 1);
+	addattr_l(n, maxlen, IFLA_GRE_TOS, &tos, 1);
 	if (link)
-		addattr32(n, 1024, IFLA_GRE_LINK, link);
-	addattr_l(n, 1024, IFLA_GRE_TTL, &ttl, 1);
-	addattr32(n, 1024, IFLA_GRE_FWMARK, fwmark);
+		addattr32(n, maxlen, IFLA_GRE_LINK, link);
+	addattr_l(n, maxlen, IFLA_GRE_TTL, &ttl, 1);
+	addattr32(n, maxlen, IFLA_GRE_FWMARK, fwmark);
 	if (is_erspan) {
-		addattr8(n, 1024, IFLA_GRE_ERSPAN_VER, erspan_ver);
+		addattr8(n, maxlen, IFLA_GRE_ERSPAN_VER, erspan_ver);
 		if (erspan_ver == 1 && erspan_idx != 0) {
-			addattr32(n, 1024, IFLA_GRE_ERSPAN_INDEX, erspan_idx);
+			addattr32(n, maxlen, IFLA_GRE_ERSPAN_INDEX, erspan_idx);
 		} else if (erspan_ver == 2) {
-			addattr8(n, 1024, IFLA_GRE_ERSPAN_DIR, erspan_dir);
-			addattr16(n, 1024, IFLA_GRE_ERSPAN_HWID, erspan_hwid);
+			addattr8(n, maxlen, IFLA_GRE_ERSPAN_DIR, erspan_dir);
+			addattr16(n, maxlen, IFLA_GRE_ERSPAN_HWID, erspan_hwid);
 		}
 	}
-	addattr16(n, 1024, IFLA_GRE_ENCAP_TYPE, encaptype);
-	addattr16(n, 1024, IFLA_GRE_ENCAP_FLAGS, encapflags);
-	addattr16(n, 1024, IFLA_GRE_ENCAP_SPORT, htons(encapsport));
-	addattr16(n, 1024, IFLA_GRE_ENCAP_DPORT, htons(encapdport));
+	addattr16(n, maxlen, IFLA_GRE_ENCAP_TYPE, encaptype);
+	addattr16(n, maxlen, IFLA_GRE_ENCAP_FLAGS, encapflags);
+	addattr16(n, maxlen, IFLA_GRE_ENCAP_SPORT, htons(encapsport));
+	addattr16(n, maxlen, IFLA_GRE_ENCAP_DPORT, htons(encapdport));
+	addattr16(n, maxlen, IFLA_GRE_MSS_CLAMP, mss_clamp);
 
 	return 0;
 }
@@ -548,6 +574,11 @@ static void gre_print_opt(struct link_util *lu, FILE *f, struct rtattr *tb[])
 			    "erspan_hwid", "erspan_hwid %#llx ", erspan_hwid);
 	}
 
+	if (get_mss_clamp() && tb[IFLA_GRE_MSS_CLAMP]) {
+		__u16 mss_clamp = rta_getattr_u16(tb[IFLA_GRE_MSS_CLAMP]);
+		print_0xhex(PRINT_ANY, "mss-clamp", "mss-clamp 0x%x ", mss_clamp);
+	}
+
 	tnl_print_encap(tb,
 			IFLA_GRE_ENCAP_TYPE,
 			IFLA_GRE_ENCAP_FLAGS,
-- 
2.37.3

