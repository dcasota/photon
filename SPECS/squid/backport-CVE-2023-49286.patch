From 5eee0e42ab5ad5d2f296e698bdfc5e711bb490d4 Mon Sep 17 00:00:00 2001
From: Amos Jeffries <yadij@users.noreply.github.com>
Date: Fri, 10 Feb 2023 12:25:07 +0000
Subject: [PATCH] Cleanup: remove xusleep() hacks (#613)

usleep() has been obsolete for a long time. C++11 provides better and
portable waiting mechanism we can use easily instead of these hacks
trying to replicate and extend usleep().

[ssrish: - backported upstream patch to squid v5
         - additionally altered Makefile.in as it is already packaged
           in the source tarball and the patched Makefile.am has no effect]
Signed-off-by: Srish Srinivasan <ssrish@vmware.com>
---
 include/xusleep.h | 15 ---------------
 lib/Makefile.am   |  3 +--
 lib/Makefile.in   | 11 +++--------
 lib/xusleep.c     | 28 ----------------------------
 src/base/File.cc  |  5 +++--
 src/cf.data.pre   |  2 --
 src/ipc.cc        | 13 +++++--------
 src/ipc_win32.cc  | 15 +++++----------
 src/unlinkd.cc    |  8 +++++---
 9 files changed, 22 insertions(+), 78 deletions(-)
 delete mode 100644 include/xusleep.h
 delete mode 100644 lib/xusleep.c

diff --git a/include/xusleep.h b/include/xusleep.h
deleted file mode 100644
index 9ae0b77..0000000
--- a/include/xusleep.h
+++ /dev/null
@@ -1,15 +0,0 @@
-/*
- * Copyright (C) 1996-2023 The Squid Software Foundation and contributors
- *
- * Squid software is distributed under GPLv2+ license and includes
- * contributions from numerous individuals and organizations.
- * Please see the COPYING and CONTRIBUTORS files for details.
- */
-
-#ifndef _INC_XUSLEEP_H
-#define _INC_XUSLEEP_H
-
-SQUIDCEXTERN int xusleep(unsigned int);
-
-#endif /* _INC_XUSLEEP_H */
-
diff --git a/lib/Makefile.am b/lib/Makefile.am
index 1e008c4..acc25d1 100644
--- a/lib/Makefile.am
+++ b/lib/Makefile.am
@@ -74,8 +74,7 @@ libmiscutil_la_SOURCES = \
 	radix.c \
 	rfc1123.c \
 	stub_memaccount.c \
-	util.c \
-	xusleep.c
+	util.c
 
 TESTS += tests/testRFC1738
 
diff --git a/lib/Makefile.in b/lib/Makefile.in
index b442565..9653d39 100644
--- a/lib/Makefile.in
+++ b/lib/Makefile.in
@@ -190,8 +190,7 @@ am_libmiscencoding_la_OBJECTS = base64.lo html_quote.lo md5.lo \
 libmiscencoding_la_OBJECTS = $(am_libmiscencoding_la_OBJECTS)
 libmiscutil_la_LIBADD =
 am_libmiscutil_la_OBJECTS = Splay.lo getfullhostname.lo heap.lo \
-	iso3307.lo radix.lo rfc1123.lo stub_memaccount.lo util.lo \
-	xusleep.lo
+	iso3307.lo radix.lo rfc1123.lo stub_memaccount.lo util.lo
 libmiscutil_la_OBJECTS = $(am_libmiscutil_la_OBJECTS)
 libsspwin32_la_LIBADD =
 am__libsspwin32_la_SOURCES_DIST = sspwin32.cc
@@ -237,7 +236,7 @@ am__depfiles_remade = ./$(DEPDIR)/Splay.Plo ./$(DEPDIR)/base64.Plo \
 	./$(DEPDIR)/rfc1123.Plo ./$(DEPDIR)/rfc1738.Plo \
 	./$(DEPDIR)/rfc2617.Plo ./$(DEPDIR)/sspwin32.Plo \
 	./$(DEPDIR)/stub_memaccount.Plo ./$(DEPDIR)/util.Plo \
-	./$(DEPDIR)/xusleep.Plo tests/$(DEPDIR)/testRFC1738.Po
+	tests/$(DEPDIR)/testRFC1738.Po
 am__mv = mv -f
 COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
 	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
@@ -860,8 +859,7 @@ libmiscutil_la_SOURCES = \
 	radix.c \
 	rfc1123.c \
 	stub_memaccount.c \
-	util.c \
-	xusleep.c
+	util.c
 
 tests_testRFC1738_SOURCES = \
 	tests/testRFC1738.cc \
@@ -978,7 +976,6 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sspwin32.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stub_memaccount.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util.Plo@am__quote@ # am--include-marker
-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xusleep.Plo@am__quote@ # am--include-marker
 @AMDEP_TRUE@@am__include@ @am__quote@tests/$(DEPDIR)/testRFC1738.Po@am__quote@ # am--include-marker
 
 $(am__depfiles_remade):
@@ -1424,7 +1421,6 @@ distclean: distclean-recursive
 	-rm -f ./$(DEPDIR)/sspwin32.Plo
 	-rm -f ./$(DEPDIR)/stub_memaccount.Plo
 	-rm -f ./$(DEPDIR)/util.Plo
-	-rm -f ./$(DEPDIR)/xusleep.Plo
 	-rm -f tests/$(DEPDIR)/testRFC1738.Po
 	-rm -f Makefile
 distclean-am: clean-am distclean-compile distclean-generic \
@@ -1489,7 +1485,6 @@ maintainer-clean: maintainer-clean-recursive
 	-rm -f ./$(DEPDIR)/sspwin32.Plo
 	-rm -f ./$(DEPDIR)/stub_memaccount.Plo
 	-rm -f ./$(DEPDIR)/util.Plo
-	-rm -f ./$(DEPDIR)/xusleep.Plo
 	-rm -f tests/$(DEPDIR)/testRFC1738.Po
 	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
diff --git a/lib/xusleep.c b/lib/xusleep.c
deleted file mode 100644
index ff17cc8..0000000
--- a/lib/xusleep.c
+++ /dev/null
@@ -1,28 +0,0 @@
-/*
- * Copyright (C) 1996-2023 The Squid Software Foundation and contributors
- *
- * Squid software is distributed under GPLv2+ license and includes
- * contributions from numerous individuals and organizations.
- * Please see the COPYING and CONTRIBUTORS files for details.
- */
-
-#include "squid.h"
-#include "xusleep.h"
-
-#if HAVE_UNISTD_H
-#include <unistd.h>
-#endif
-
-/**
- * xusleep, as usleep but accepts longer pauses
- */
-int
-xusleep(unsigned int usec)
-{
-    /* XXX emulation of usleep() */
-    struct timeval sl;
-    sl.tv_sec = usec / 1000000;
-    sl.tv_usec = usec % 1000000;
-    return select(0, NULL, NULL, NULL, &sl);
-}
-
diff --git a/src/base/File.cc b/src/base/File.cc
index bbef659..5024d9c 100644
--- a/src/base/File.cc
+++ b/src/base/File.cc
@@ -11,8 +11,9 @@
 #include "Debug.h"
 #include "sbuf/Stream.h"
 #include "tools.h"
-#include "xusleep.h"
 
+#include <chrono>
+#include <thread>
 #include <utility>
 
 #if HAVE_FCNTL_H
@@ -331,7 +332,7 @@ File::lock(const FileOpeningConfig &cfg)
                    " more time(s) after a failure: " << ex.what());
         }
         Must(attemptsLeft); // the catch statement handles the last attempt
-        xusleep(cfg.retryGapUsec);
+	std::this_thread::sleep_for(std::chrono::microseconds(cfg.retryGapUsec));
     }
     debugs(54, 9, "disabled");
 }
diff --git a/src/cf.data.pre b/src/cf.data.pre
index 219cbdc..48dd206 100644
--- a/src/cf.data.pre
+++ b/src/cf.data.pre
@@ -10443,8 +10443,6 @@ DOC_START
 	processes, these sleep delays will add up and your
 	Squid will not service requests for some amount of time
 	until all the child processes have been started.
-	On Windows value less then 1000 (1 milliseconds) are
-	rounded to 1000.
 DOC_END
 
 NAME: windows_ipaddrchangemonitor
diff --git a/src/ipc.cc b/src/ipc.cc
index 0f7071b..bd911ab 100644
--- a/src/ipc.cc
+++ b/src/ipc.cc
@@ -20,6 +20,9 @@
 #include "SquidIpc.h"
 #include "tools.h"
 
+#include <chrono>
+#include <thread>
+
 static const char *hello_string = "hi there\n";
 #ifndef HELLO_BUF_SZ
 #define HELLO_BUF_SZ 32
@@ -305,14 +308,8 @@ ipcCreate(int type, const char *prog, const char *const args[], const char *name
 
         fd_table[pwfd].flags.ipc = 1;
 
-        if (Config.sleep_after_fork) {
-            /* XXX emulation of usleep() */
-
-            struct timeval sl;
-            sl.tv_sec = Config.sleep_after_fork / 1000000;
-            sl.tv_usec = Config.sleep_after_fork % 1000000;
-            select(0, NULL, NULL, NULL, &sl);
-        }
+	if (Config.sleep_after_fork)
+		std::this_thread::sleep_for(std::chrono::microseconds(Config.sleep_after_fork));
 
         return pid;
     }
diff --git a/src/ipc_win32.cc b/src/ipc_win32.cc
index 7621d84..e7314bd 100644
--- a/src/ipc_win32.cc
+++ b/src/ipc_win32.cc
@@ -23,6 +23,9 @@
 #include "tools.h"
 
 #include <cerrno>
+#include <chrono>
+#include <thread>
+
 #if HAVE_MSWSOCK_H
 #include <mswsock.h>
 #endif
@@ -314,16 +317,8 @@ ipcCreate(int type, const char *prog, const char *const args[], const char *name
     fd_table[crfd].flags.ipc = true;
     fd_table[cwfd].flags.ipc = true;
 
-    if (Config.sleep_after_fork) {
-        /* XXX emulation of usleep() */
-        DWORD sl;
-        sl = Config.sleep_after_fork / 1000;
-
-        if (sl == 0)
-            sl = 1;
-
-        Sleep(sl);
-    }
+    if (Config.sleep_after_fork)
+        std::this_thread::sleep_for(std::chrono::microseconds(Config.sleep_after_fork));
 
     if (GetExitCodeThread((HANDLE) thread, &ecode) && ecode == STILL_ACTIVE) {
         if (hIpc)
diff --git a/src/unlinkd.cc b/src/unlinkd.cc
index 12a6474..083d804 100644
--- a/src/unlinkd.cc
+++ b/src/unlinkd.cc
@@ -21,7 +21,9 @@
 #include "StatCounters.h"
 #include "store/Disk.h"
 #include "tools.h"
-#include "xusleep.h"
+
+#include <chrono>
+#include <thread>
 
 /* This code gets linked to Squid */
 
@@ -60,7 +62,7 @@ unlinkdUnlink(const char *path)
          * We can't use fd_set when using epoll() or kqueue().  In
          * these cases we block for 10 ms.
          */
-        xusleep(10000);
+	std::this_thread::sleep_for(std::chrono::milliseconds(10));
 #else
         /*
          * DPW 2007-04-23
@@ -222,7 +224,7 @@ unlinkdInit(void)
     if (pid < 0)
         fatal("Failed to create unlinkd subprocess");
 
-    xusleep(250000);
+    std::this_thread::sleep_for(std::chrono::milliseconds(250));
 
     fd_note(unlinkd_wfd, "squid -> unlinkd");
 
